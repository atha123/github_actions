{"name": "test_coupon_applied_success_message_displayed", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00007FF7848DFE65+26629]\n\t(No symbol) [0x00007FF784846030]\n\t(No symbol) [0x00007FF7846D931A]\n\t(No symbol) [0x00007FF78472F8E7]\n\t(No symbol) [0x00007FF78472FB1C]\n\t(No symbol) [0x00007FF7847834A7]\n\t(No symbol) [0x00007FF784757AEF]\n\t(No symbol) [0x00007FF784780169]\n\t(No symbol) [0x00007FF784757883]\n\t(No symbol) [0x00007FF784720550]\n\t(No symbol) [0x00007FF784721803]\n\tGetHandleVerifier [0x00007FF784C372DD+3529853]\n\tGetHandleVerifier [0x00007FF784C4DA42+3621858]\n\tGetHandleVerifier [0x00007FF784C424F3+3575443]\n\tGetHandleVerifier [0x00007FF7849AB79A+860474]\n\t(No symbol) [0x00007FF7848508AF]\n\t(No symbol) [0x00007FF78484CBE4]\n\t(No symbol) [0x00007FF78484CD86]\n\t(No symbol) [0x00007FF78483C2E9]\n\tBaseThreadInitThunk [0x00007FF8CECE7374+20]\n\tRtlUserThreadStart [0x00007FF8D021CC91+33]", "trace": "self = <ssqatest.tests.frontend.cart.test_coupon_cartpage.TestCartCouponFour object at 0x00000225D4773AA0>, setup = None\n\n    @pytest.mark.ecomfe54\n    def test_coupon_applied_success_message_displayed(self, setup):\n        \"\"\"\n        Test case for verifying the display of a success message after applying a coupon.\n    \n        Args:\n            setup: A setup object\n        \"\"\"\n    \n        logger.info(f\"Running Test: test_coupon_applied_success_message_displayed\")\n        self.homepage.go_to_home_page()\n        self.homepage.click_first_add_to_cart_button()\n        self.header.wait_until_cart_item_count(1)\n    \n        self.cart.go_to_cart_page()\n    \n        config = MainConfigs()\n        coupon_code = config.get_coupon_code('50')\n    \n>       self.cart.apply_coupon(coupon_code, expect_success=False)\n\nssqatest\\tests\\frontend\\cart\\test_coupon_cartpage.py:206: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nssqatest\\src\\pages\\CartPage.py:38: in apply_coupon\n    self.input_coupon(coupon_code)\nssqatest\\src\\pages\\CartPage.py:32: in input_coupon\n    self.sl.wait_and_input_text(self.COUPON_FIELD, coupon_code)\nssqatest\\src\\selenium_extended\\SeleniumExtended.py:18: in wait_and_input_text\n    WebDriverWait(self.driver, timeout).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"e7cca68fbfd9c47943faa79f88cb9167\")>, method = <function visibility_of_element_located.<locals>._predicate at 0x00000225D4B58720>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7848DFE65+26629]\nE       \t(No symbol) [0x00007FF784846030]\nE       \t(No symbol) [0x00007FF7846D931A]\nE       \t(No symbol) [0x00007FF78472F8E7]\nE       \t(No symbol) [0x00007FF78472FB1C]\nE       \t(No symbol) [0x00007FF7847834A7]\nE       \t(No symbol) [0x00007FF784757AEF]\nE       \t(No symbol) [0x00007FF784780169]\nE       \t(No symbol) [0x00007FF784757883]\nE       \t(No symbol) [0x00007FF784720550]\nE       \t(No symbol) [0x00007FF784721803]\nE       \tGetHandleVerifier [0x00007FF784C372DD+3529853]\nE       \tGetHandleVerifier [0x00007FF784C4DA42+3621858]\nE       \tGetHandleVerifier [0x00007FF784C424F3+3575443]\nE       \tGetHandleVerifier [0x00007FF7849AB79A+860474]\nE       \t(No symbol) [0x00007FF7848508AF]\nE       \t(No symbol) [0x00007FF78484CBE4]\nE       \t(No symbol) [0x00007FF78484CD86]\nE       \t(No symbol) [0x00007FF78483C2E9]\nE       \tBaseThreadInitThunk [0x00007FF8CECE7374+20]\nE       \tRtlUserThreadStart [0x00007FF8D021CC91+33]\n\nlhp321\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "description": "\n        Test case for verifying the display of a success message after applying a coupon.\n\n        Args:\n            setup: A setup object\n        ", "start": 1742568896551, "stop": 1742568912891, "uuid": "2d88e457-047c-4eaa-b750-95581dfaf737", "historyId": "6784f7b7b8956f748edba0062d400daf", "testCaseId": "1bf6e832789e28c2c18f8235609ff294", "fullName": "ssqatest.tests.frontend.cart.test_coupon_cartpage.TestCartCouponFour#test_coupon_applied_success_message_displayed", "labels": [{"name": "tag", "value": "ecomfe54"}, {"name": "tag", "value": "@pytest.mark.usefixtures('init_driver')"}, {"name": "parentSuite", "value": "ssqatest.tests.frontend.cart"}, {"name": "suite", "value": "test_coupon_cartpage"}, {"name": "subSuite", "value": "TestCartCouponFour"}, {"name": "host", "value": "latha"}, {"name": "thread", "value": "15964-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "ssqatest.tests.frontend.cart.test_coupon_cartpage"}]}