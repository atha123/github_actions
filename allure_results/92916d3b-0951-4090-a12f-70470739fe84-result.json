{"name": "test_list_products_with_filter_after", "status": "failed", "statusDetails": {"message": "AssertionError: List products with filter 'after' returned unexpected number of products.Expected: 29, Actual: 27\nassert 27 == 29\n +  where 27 = len([{'_links': {'collection': [{'href': 'http://dev.bootcamp.store.supersqa.com/wp-json/wc/v3/products'}], 'self': [{'hre...4929', 'targetHints': {'allow': [...]}}]}, 'attributes': [], 'average_rating': '0.00', 'backordered': False, ...}, ...])\n +  and   29 = len([{'ID': 19, 'comment_count': 0, 'comment_status': 'open', 'guid': 'http://localhost:7676/?post_type=product&#038;p=19'... 'comment_count': 0, 'comment_status': 'open', 'guid': 'http://localhost:7676/?post_type=product&#038;p=24', ...}, ...])", "trace": "self = <test_get_products_with_filter.TestListProductsWithFilter object at 0x00000225D47043E0>\n\n    @pytest.mark.ecombe27\n    @pytest.mark.tcid51\n    @pytest.mark.ecombe27\n    def test_list_products_with_filter_after(self):\n        \"\"\"\n            Test case to verify the 'list products with filter' functionality using the 'after' parameter.\n    \n        \"\"\"\n        # create data\n        x_days_from_today = 300\n        _after_created_date = datetime.now().replace(microsecond=0) - timedelta(days=x_days_from_today)\n        after_created_date = _after_created_date.isoformat()\n    \n        # make the call\n        payload = dict()\n        payload['after'] = after_created_date\n        rs_api = ProductsAPIHelper().call_list_products(payload)\n        assert rs_api, f\"Empty response for 'list products with filer\"\n    \n        # get data from db\n        db_products = ProductsDAO().get_products_created_after_given_date(after_created_date)\n    \n        # verify response match db\n>       assert len(rs_api) == len(db_products), f\"List products with filter 'after' returned unexpected number of products.\" \\\n                                                f\"Expected: {len(db_products)}, Actual: {len(rs_api)}\"\nE       AssertionError: List products with filter 'after' returned unexpected number of products.Expected: 29, Actual: 27\nE       assert 27 == 29\nE        +  where 27 = len([{'_links': {'collection': [{'href': 'http://dev.bootcamp.store.supersqa.com/wp-json/wc/v3/products'}], 'self': [{'hre...4929', 'targetHints': {'allow': [...]}}]}, 'attributes': [], 'average_rating': '0.00', 'backordered': False, ...}, ...])\nE        +  and   29 = len([{'ID': 19, 'comment_count': 0, 'comment_status': 'open', 'guid': 'http://localhost:7676/?post_type=product&#038;p=19'... 'comment_count': 0, 'comment_status': 'open', 'guid': 'http://localhost:7676/?post_type=product&#038;p=24', ...}, ...])\n\nssqatest\\tests\\backend\\products\\test_get_products_with_filter.py:34: AssertionError"}, "description": "\n            Test case to verify the 'list products with filter' functionality using the 'after' parameter.\n\n        ", "start": 1742568759998, "stop": 1742568761075, "uuid": "d0e5c613-37d3-4300-9288-4ace32b01898", "historyId": "27c34273fb0601a77e44d243bdebc605", "testCaseId": "0b79f4b70afed0985d6aea4a277cf9f2", "fullName": "ssqatest.tests.backend.products.test_get_products_with_filter.TestListProductsWithFilter#test_list_products_with_filter_after", "labels": [{"name": "tag", "value": "ecombe27"}, {"name": "tag", "value": "tcid51"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "ssqatest.tests.backend.products"}, {"name": "suite", "value": "test_get_products_with_filter"}, {"name": "subSuite", "value": "TestListProductsWithFilter"}, {"name": "host", "value": "latha"}, {"name": "thread", "value": "15964-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "ssqatest.tests.backend.products.test_get_products_with_filter"}]}