{"name": "test_remove_one_item_from_cart", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <ssqatest.tests.frontend.cart.test_remove_item.TestRemoveOneCartItem object at 0x00000225D47C9D60>, setup = None\n\n    @pytest.mark.tcid132\n    @pytest.mark.ecomfe62\n    def test_remove_one_item_from_cart(self, setup):\n        \"\"\"\n        Test to verify the removal of one item from the cart.\n    \n        Args:\n            setup: A setup object.\n        \"\"\"\n        logger.info(f\"Running Test: test_remove_one_item_from_cart\")\n        self.homepage.go_to_home_page()\n        self.homepage.click_first_add_to_cart_button()\n        self.header.wait_until_cart_item_count(1)\n    \n        self.cart.go_to_cart_page()\n>       self.cart.click_remove_item_button()\n\nssqatest\\tests\\frontend\\cart\\test_remove_item.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nssqatest\\src\\pages\\CartPage.py:111: in click_remove_item_button\n    all_btns = self.sl.wait_until_elements_are_visible(self.REMOVE_ITEM_BUTTON)\nssqatest\\src\\selenium_extended\\SeleniumExtended.py:63: in wait_until_elements_are_visible\n    elem = WebDriverWait(self.driver, timeout).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a71cefff0118d0e347e7779af48234f6\")>, method = <function visibility_of_all_elements_located.<locals>._predicate at 0x00000225D4AEF4C0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nlhp321\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "description": "\n        Test to verify the removal of one item from the cart.\n\n        Args:\n            setup: A setup object.\n        ", "start": 1742569294000, "stop": 1742569310089, "uuid": "52f65ace-f296-4bdc-9c59-6aebcd26ff4d", "historyId": "227ce0d3d111dd0acab556a61d5fd290", "testCaseId": "da968b48c31da2fb47228b8b3d9e9d03", "fullName": "ssqatest.tests.frontend.cart.test_remove_item.TestRemoveOneCartItem#test_remove_one_item_from_cart", "labels": [{"name": "tag", "value": "ecomfe62"}, {"name": "tag", "value": "tcid132"}, {"name": "tag", "value": "@pytest.mark.usefixtures('init_driver')"}, {"name": "parentSuite", "value": "ssqatest.tests.frontend.cart"}, {"name": "suite", "value": "test_remove_item"}, {"name": "subSuite", "value": "TestRemoveOneCartItem"}, {"name": "host", "value": "latha"}, {"name": "thread", "value": "15964-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "ssqatest.tests.frontend.cart.test_remove_item"}]}