{"name": "test_variable_product_page_logo_dropdown_label", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00007FF7848DFE65+26629]\n\t(No symbol) [0x00007FF784846030]\n\t(No symbol) [0x00007FF7846D931A]\n\t(No symbol) [0x00007FF78472F8E7]\n\t(No symbol) [0x00007FF78472FB1C]\n\t(No symbol) [0x00007FF7847834A7]\n\t(No symbol) [0x00007FF784757AEF]\n\t(No symbol) [0x00007FF784780169]\n\t(No symbol) [0x00007FF784757883]\n\t(No symbol) [0x00007FF784720550]\n\t(No symbol) [0x00007FF784721803]\n\tGetHandleVerifier [0x00007FF784C372DD+3529853]\n\tGetHandleVerifier [0x00007FF784C4DA42+3621858]\n\tGetHandleVerifier [0x00007FF784C424F3+3575443]\n\tGetHandleVerifier [0x00007FF7849AB79A+860474]\n\t(No symbol) [0x00007FF7848508AF]\n\t(No symbol) [0x00007FF78484CBE4]\n\t(No symbol) [0x00007FF78484CD86]\n\t(No symbol) [0x00007FF78483C2E9]\n\tBaseThreadInitThunk [0x00007FF8CECE7374+20]\n\tRtlUserThreadStart [0x00007FF8D021CC91+33]", "trace": "self = <ssqatest.tests.frontend.product_detail_page.test_product_detail_page_variable_product_smoke.TestProductDetailPageVariableProductTwo object at 0x00000225D37CE090>\nrequest = <SubRequest 'setup' for <Function test_variable_product_page_logo_dropdown_label>>\n\n    @pytest.fixture(scope='class')\n    def setup(self, request):\n        request.cls.product_page = ProductPage(self.driver)\n        request.cls.home_page = HomePage(self.driver)\n        self.home_page.go_to_home_page()\n>       self.product_page.click_on_first_variable_product()\n\nssqatest\\tests\\frontend\\product_detail_page\\test_product_detail_page_variable_product_smoke.py:271: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nssqatest\\src\\pages\\ProductPage.py:158: in click_on_first_variable_product\n    self.sl.wait_and_click(self.FRIST_VARIABE_PRODUCT)\nssqatest\\src\\selenium_extended\\SeleniumExtended.py:25: in wait_and_click\n    WebDriverWait(self.driver, timeout).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"e9a528687e97ac3f1ea5bb782c46deb6\")>, method = <function element_to_be_clickable.<locals>._predicate at 0x00000225D4B5BA60>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7848DFE65+26629]\nE       \t(No symbol) [0x00007FF784846030]\nE       \t(No symbol) [0x00007FF7846D931A]\nE       \t(No symbol) [0x00007FF78472F8E7]\nE       \t(No symbol) [0x00007FF78472FB1C]\nE       \t(No symbol) [0x00007FF7847834A7]\nE       \t(No symbol) [0x00007FF784757AEF]\nE       \t(No symbol) [0x00007FF784780169]\nE       \t(No symbol) [0x00007FF784757883]\nE       \t(No symbol) [0x00007FF784720550]\nE       \t(No symbol) [0x00007FF784721803]\nE       \tGetHandleVerifier [0x00007FF784C372DD+3529853]\nE       \tGetHandleVerifier [0x00007FF784C4DA42+3621858]\nE       \tGetHandleVerifier [0x00007FF784C424F3+3575443]\nE       \tGetHandleVerifier [0x00007FF7849AB79A+860474]\nE       \t(No symbol) [0x00007FF7848508AF]\nE       \t(No symbol) [0x00007FF78484CBE4]\nE       \t(No symbol) [0x00007FF78484CD86]\nE       \t(No symbol) [0x00007FF78483C2E9]\nE       \tBaseThreadInitThunk [0x00007FF8CECE7374+20]\nE       \tRtlUserThreadStart [0x00007FF8D021CC91+33]\n\nlhp321\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "description": "\n        Test method to verify the label of the logo attribute dropdown on a variable product page.\n\n        Args:\n            setup: A setup object.\n        ", "start": 1742570064267, "stop": 1742570064267, "uuid": "358a4081-aa19-4436-a2f4-a30b04d52f7d", "historyId": "7b5cabc7d969dd8b5442b50f1dfde27a", "testCaseId": "131217faddab1009789dd64360cce007", "fullName": "ssqatest.tests.frontend.product_detail_page.test_product_detail_page_variable_product_smoke.TestProductDetailPageVariableProductTwo#test_variable_product_page_logo_dropdown_label", "labels": [{"name": "tag", "value": "ecomfe139"}, {"name": "tag", "value": "tcid95"}, {"name": "tag", "value": "@pytest.mark.usefixtures('init_driver')"}, {"name": "tag", "value": "fe"}, {"name": "tag", "value": "regression"}, {"name": "tag", "value": "smoke"}, {"name": "tag", "value": "pdp"}, {"name": "tag", "value": "pdp_variable"}, {"name": "parentSuite", "value": "ssqatest.tests.frontend.product_detail_page"}, {"name": "suite", "value": "test_product_detail_page_variable_product_smoke"}, {"name": "subSuite", "value": "TestProductDetailPageVariableProductTwo"}, {"name": "host", "value": "latha"}, {"name": "thread", "value": "15964-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "ssqatest.tests.frontend.product_detail_page.test_product_detail_page_variable_product_smoke"}]}